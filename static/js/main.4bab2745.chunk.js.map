{"version":3,"sources":["components/header/header.component.jsx","components/gameslist/gameslist.component.jsx","components/score-components/score-add.component.jsx","components/score-components/final-score.component.jsx","components/score-components/score-boolean.component.jsx","components/score-components/score-multiply.component.jsx","components/score-components/score-divide.component.jsx","components/game-overview/game-overview.component.jsx","App.js","index.js"],"names":["Header","to","className","GamesList","props","state","games","name","id","this","map","game","key","Component","ScoreAdd","handleChange","e","sum","Number","target","value","setState","handleClick","componentParams","positive","handleSubmit","score","addScore","response","label","type","onChange","onClick","FinalScore","finalScore","operation","operationValue","ScoreBoolean","console","log","question","onTrue","onFalse","ScoreMultiply","newState","value1","value2","place","round","mult","newValue","product","lastResponse","value1Value","value2Value","value1Disabled","value2Disabled","htmlFor","disabled","ScoreDivide","divide","direction","Math","floor","GameOverview","componentDidMount","currentGame","find","returned","currentComponent","scoreComponents","currentScoreComponent","currentScore","scoreClicked","length","button","buttonText","buttonState","setSum","match","params","gameId","component","ScoreComponent","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bab2745.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './header.component.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Link to='/' className='logo'>Score It!</Link>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport './gameslist.component.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GamesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            games: [\r\n                {\r\n                    name: 'Blokus',\r\n                    id: 1\r\n                },\r\n                {\r\n                    name: 'Traders of Osaka',\r\n                    id: 2\r\n                },\r\n                {\r\n                    name: 'Brass: Lancashire',\r\n                    id: 3\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='games-list-container'>\r\n                <div>\r\n                    <h1>Games List</h1>\r\n                </div>\r\n                <div className='games-list'>\r\n                    { this.state.games.map((game) => {\r\n                        return <div key={game.id}><Link to={`games/${game.id}`}>{game.name}</Link></div>\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default GamesList;","import React, { Component } from 'react';\r\n\r\nclass ScoreAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            sum: 0\r\n        }\r\n            \r\n    }\r\n\r\n    handleChange = e => {\r\n        const sum = Number(e.target.value);\r\n        this.setState({sum})\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const value = this.props.componentParams.positive ? Number(e.target.value) : Number(e.target.value) * -1\r\n        this.setState({sum: this.state.sum + value});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        const score = this.props.componentParams.addScore === false ? null : Number(this.state.sum);\r\n        const response = Number(this.state.sum)\r\n        this.props.handleClick({score, response})\r\n        this.setState({sum: 0})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='center'>\r\n                <div>{this.props.componentParams.label}</div>\r\n                <form>\r\n                    <input type='text' value={this.state.sum} onChange={this.handleChange}/>\r\n                </form>\r\n                <button value='1' onClick={this.handleClick}>+1</button>\r\n                <button value='5' onClick={this.handleClick}>+5</button>\r\n                <button onClick={this.handleSubmit}>NEXT</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScoreAdd;","import React from 'react';\r\n\r\nconst FinalScore = (props) => {\r\n    // const performOn = props.componentParams.performOn === 'lastResponse' ? props.lastResponse : props.score;\r\n    // console.log(performOn)\r\n    let finalScore = props.score;\r\n    \r\n    if (props.componentParams.operation === 'divide') {\r\n        finalScore = props.score / props.componentParams.operationValue;\r\n    }\r\n\r\n    return <div>Final Score: {finalScore}</div>\r\n}\r\n\r\nexport default FinalScore;","import React, { Component } from 'react';\r\n\r\nclass ScoreBoolean extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            sum: 0\r\n        }\r\n            \r\n    }\r\n\r\n    handleSubmit = e => {\r\n        console.log(Number(e.target.value))\r\n        this.props.handleClick({score: Number(e.target.value)})\r\n        \r\n        this.setState({sum: 0})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='center'>\r\n                <div>\r\n                    {this.props.componentParams.question}\r\n                    \r\n                </div>\r\n                <button value={this.props.componentParams.onTrue} onClick={this.handleSubmit}>Yes</button>\r\n                <button value={this.props.componentParams.onFalse} onClick={this.handleSubmit}>No</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScoreBoolean;","import React, { Component } from 'react';\r\n\r\nclass ScoreMultiply extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            value1: 0,\r\n            value2: 0,\r\n            product: 1\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState ({\r\n            value1: this.props.componentParams.value1.value === 'previousScore' ? this.props.lastResponse : 0,\r\n            value2: this.props.componentParams.value2.value === 'previousScore' ? this.props.lastResponse : 0,\r\n            product: 1\r\n        })\r\n    }\r\n\r\n    handleChange = e => {\r\n        const newState = this.state;\r\n        const value = Number(e.target.value);\r\n        \r\n        if(e.target.id === 'value1') {\r\n            newState.value1 = value;\r\n        }\r\n        if(e.target.id === 'value2') {\r\n            newState.value2 = value;\r\n        }\r\n\r\n        this.setState(newState, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const value = this.props.componentParams.positive ? Number(e.target.value) : Number(e.target.value) * -1\r\n        this.setState({sum: this.state.sum + value});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        const place = this.props.componentParams.round.place;\r\n        const mult = this.state.value1 * this.state.value2\r\n        const roundUp = mult % place > 0 ? place - (mult % place) : 0;\r\n        const newValue = mult + roundUp;\r\n        \r\n        this.props.handleClick({score: newValue})\r\n        this.setState({\r\n            value1: 0,\r\n            value2: 0,\r\n            product: 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const value1 = this.props.componentParams.value1;\r\n        const value2 = this.props.componentParams.value2;\r\n        const value1Value = value1.value === 'previousScore' ? this.props.lastResponse : this.state.value1;\r\n        const value2Value = value2.value === 'previousScore' ? this.props.lastResponse : this.state.value2;\r\n        const value1Disabled = value1.value === 'previousScore' ? true : false;\r\n        const value2Disabled = value2.value === 'previousScore' ? true : false;\r\n\r\n        return (\r\n            <div className='center'>\r\n                <form>\r\n                    <div className='center'>\r\n                    <label htmlFor='value1'>{value1.label}</label><br></br>\r\n                    <input type='text' id='value1' value={value1Value} disabled={value1Disabled} onChange={this.handleChange}/><br></br>\r\n                    <label htmlFor='value2'>{value2.label}</label><br></br>\r\n                    <input type='text' id='value2' value={value2Value} disabled={value2Disabled} onChange={this.handleChange}/>\r\n                    </div>\r\n                </form>\r\n\r\n                <button onClick={this.handleSubmit}>NEXT</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScoreMultiply;","import React, { Component } from 'react';\r\n\r\nclass ScoreDivide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const value1 = this.props.componentParams.value1;\r\n        const value2 = this.props.componentParams.value2;\r\n        let value1Value = value1.value === 'previousScore' ? this.props.lastResponse : this.props.componentParams.value;\r\n        let value2Value = value2.value === 'previousScore' ? this.props.lastResponse : this.props.componentParams.value;\r\n        let value1Disabled = value1.value === 'previousScore' ? true : false;\r\n        let value2Disabled = value2.value === 'previousScore' ? true : false;\r\n\r\n        if( value1.type === 'fixed' ) {\r\n            value1Value = value1.value\r\n            value1Disabled = true;\r\n        } else if (value1.value === 'previousScore') {\r\n            value1Value = this.props.lastResponse\r\n            value1Disabled = true;\r\n        } else {\r\n            value1Value = this.props.componentParams.value\r\n        }\r\n\r\n        if( value2.type === 'fixed' ) {\r\n            value2Value = value2.value\r\n            value2Disabled = true;\r\n        } else if (value2.value === 'previousScore') {\r\n            value2Value = this.props.lastResponse\r\n            value2Disabled = true;\r\n        } else {\r\n            value2Value = this.props.componentParams.value\r\n        }\r\n        \r\n        this.state = {\r\n            value1Value,\r\n            value2Value,\r\n            value1Disabled,\r\n            value2Disabled\r\n        }\r\n            \r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState ({\r\n        //     value1: this.props.componentParams.value1.value === 'previousScore' ? this.props.lastResponse : 0,\r\n        //     value2: this.props.componentParams.value2.value === 'previousScore' ? this.props.lastResponse : 0\r\n        // })\r\n    }\r\n\r\n    handleChange = e => {\r\n        const newState = this.state;\r\n        const value = Number(e.target.value);\r\n        \r\n        if(e.target.id === 'value1') {\r\n            newState.value1Value = value;\r\n        }\r\n        if(e.target.id === 'value2') {\r\n            newState.value2Value = value;\r\n        }\r\n\r\n        this.setState(newState, () => {\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const value = this.props.componentParams.positive ? Number(e.target.value) : Number(e.target.value) * -1\r\n        this.setState({sum: this.state.sum + value});\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        const place = this.props.componentParams.round.place;\r\n        const divide = this.state.value1Value / this.state.value2Value\r\n        const newValue = this.props.componentParams.round.direction === 'down' ? Math.floor(divide) : divide;\r\n        \r\n        \r\n        this.props.handleClick({score: newValue})\r\n        // this.setState({\r\n        //     value1: 0,\r\n        //     value2: 0,\r\n        //     product: 1\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const value1 = this.props.componentParams.value1;\r\n        const value2 = this.props.componentParams.value2;\r\n        // let value1Value = value1.value === 'previousScore' ? this.props.lastResponse : this.props.componentParams.value;\r\n        // let value2Value = value2.value === 'previousScore' ? this.props.lastResponse : this.props.componentParams.value;\r\n        // let value1Disabled = value1.value === 'previousScore' ? true : false;\r\n        // let value2Disabled = value2.value === 'previousScore' ? true : false;\r\n\r\n        // if( value1.type === 'fixed' ) {\r\n        //     value1Value = value1.value\r\n        //     value1Disabled = true;\r\n        // } else if (value1.value === 'previousScore') {\r\n        //     value1Value = this.props.lastResponse\r\n        //     value1Disabled = true;\r\n        // } else {\r\n        //     value1Value = this.props.componentParams.value\r\n        // }\r\n\r\n        // if( value2.type === 'fixed' ) {\r\n        //     value2Value = value2.value\r\n        //     value2Disabled = true;\r\n        // } else if (value2.value === 'previousScore') {\r\n        //     value2Value = this.props.lastResponse\r\n        //     value2Disabled = true;\r\n        // } else {\r\n        //     value2Value = this.props.componentParams.value\r\n        // }\r\n\r\n        return (\r\n            <div className='center'>\r\n                <form>\r\n                    <div className='center'>\r\n                    <label htmlFor='value1'>{value1.label}</label><br></br>\r\n                    <input type='text' id='value1' value={this.state.value1Value} disabled={this.state.value1Disabled} onChange={this.handleChange}/><br></br>\r\n                    <label htmlFor='value2'>{value2.label}</label><br></br>\r\n                    <input type='text' id='value2' value={this.state.value2Value} disabled={this.state.value2Disabled} onChange={this.handleChange}/>\r\n                    </div>\r\n                </form>\r\n\r\n                <button onClick={this.handleSubmit}>NEXT</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ScoreDivide;","import React, { Component } from 'react';\r\n\r\nimport ScoreAdd from '../score-components/score-add.component'\r\nimport FinalScore from '../score-components/final-score.component'\r\nimport ScoreBoolean from '../score-components/score-boolean.component'\r\nimport ScoreMultiply from '../score-components/score-multiply.component'\r\nimport ScoreDivide from '../score-components/score-divide.component'\r\n\r\nclass GameOverview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const id = props.match.params.gameId;\r\n        \r\n        this.state = {\r\n            scoreClicked: false,\r\n            button: {\r\n                buttonState: 'init',\r\n                buttonText: \"SCORE IT!\"\r\n            },\r\n            id,\r\n            currentScoreComponent: 0,\r\n            currentGame: {},\r\n            currentScore: 0,\r\n            lastResponse: '',\r\n            games: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Blokus',\r\n                    scoreComponents: [\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: false,\r\n                                addScore: true,\r\n                                label: \"Enter the number of squares you have in your remaining tiles.\"\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreBoolean,\r\n                            componentParams: {\r\n                                question: 'Is the last piece you placed on the board your smallest piece (1 square)?',\r\n                                onTrue: 5,\r\n                                onFalse: 0\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreBoolean,\r\n                            componentParams: {\r\n                                question: 'Did you place all of your tiles?',\r\n                                onTrue: 15,\r\n                                onFalse: 0\r\n                            }\r\n                        },\r\n                        {\r\n                            component: FinalScore,\r\n                            type: 'final',\r\n                            componentParams: {}\r\n                        }\r\n                    ]\r\n                    \r\n                },\r\n                {\r\n                    name: 'Traders of Osaka',\r\n                    id: 2,\r\n                    scoreComponents: [\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: false,\r\n                                label: \"Enter the number of cards in the set being sold plus the number of achievement tokens in that color.\"\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreMultiply,\r\n                            componentParams: {\r\n                                round: {\r\n                                    direction: 'up',\r\n                                    place: 5\r\n                                },\r\n                                value1: {\r\n                                    type: 'input',\r\n                                    label: 'Enter the value of the highest value card in the set being sold'\r\n                                },\r\n                                value2: {\r\n                                    type: 'input',\r\n                                    label: 'Value from the previous entry',\r\n                                    value: 'previousScore'\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            component: FinalScore,\r\n                            type: 'final',\r\n                            componentParams: {\r\n                                operation: 'divide',\r\n                                operationValue: 5\r\n                            }\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    name: 'Brass: Lancashire',\r\n                    id: 3,\r\n                    scoreComponents: [\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: true,\r\n                                label: \"End of Canal Era: For each of your link tiles, add 1 for each connect icon in adjacent locations.\"\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: true,\r\n                                label: \"End of Canal Era: Add all points from your flipped tiles.\"\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: true,\r\n                                label: \"End of Game: For each of your link tiles, add 1 for each connect icon in adjacent locations.\"\r\n                            }\r\n                        },\r\n                        {\r\n                            component: ScoreAdd,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: true,\r\n                                label: \"End of Game: Add all points from your flipped tiles.\"\r\n                            }\r\n                        },{\r\n                            component: ScoreDivide,\r\n                            componentParams: {\r\n                                positive: true,\r\n                                addScore: true,\r\n                                round: {\r\n                                    direction: 'down',\r\n                                    place: 1\r\n                                },\r\n                                value1: {\r\n                                    type: 'input',\r\n                                    label: \"End of Game: Add all Pounds remaining.\"\r\n                                },\r\n                                value2: {\r\n                                    type: 'fixed',\r\n                                    label: '1 Point for every 10 Pounds',\r\n                                    value: 10\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            component: FinalScore,\r\n                            type: 'final',\r\n                            componentParams: {}\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const newState = this.state;\r\n        newState.currentGame = this.state.games.find(game => game.id == this.state.id);\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    handleClick = returned => {\r\n        const newState = this.state;\r\n        const currentComponent = newState.currentGame.scoreComponents[newState.currentScoreComponent];\r\n        console.log(returned)   \r\n        //newState.currentScore = returned.score === null ? 0 : newState.currentScore + returned.score;\r\n        newState.currentScore = returned.score ? newState.currentScore + returned.score : newState.currentScore;\r\n        newState.lastResponse = returned.response ? returned.response : this.state.lastResponse;\r\n\r\n        if(newState.scoreClicked) {newState.currentScoreComponent++}   \r\n        newState.scoreClicked = true;\r\n\r\n        if (newState.currentScoreComponent === 0 && this.state.currentGame.scoreComponents.length > 1) {\r\n            newState.button.buttonText = 'In Overview';\r\n        } else if (currentComponent.type === 'final') {\r\n            newState.button.buttonState = 'hide';\r\n        }\r\n\r\n        //console.log(newState)\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    setSum = sum => {\r\n        console.log(sum)\r\n    }\r\n\r\n    render() {\r\n        const game = this.state.games.find(game => game.id == this.state.id);\r\n        const currentGame = this.state.currentGame.id ? this.state.currentGame : game;\r\n        console.log(this.state.lastResponse)\r\n        const ScoreComponent = currentGame.scoreComponents[this.state.currentScoreComponent].component;\r\n        return (\r\n            <div className='center'>\r\n                <div>Game Overview</div>\r\n                <div>{game.name} Current Score: {this.state.currentScore}</div>\r\n                {this.state.scoreClicked && <ScoreComponent componentParams={currentGame.scoreComponents[this.state.currentScoreComponent].componentParams} score={this.state.currentScore} lastResponse={this.state.lastResponse} handleClick={this.handleClick}/>}\r\n                {!this.state.scoreClicked && <button onClick={this.handleClick}>{this.state.button.buttonText}</button>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameOverview","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Header from './components/header/header.component';\nimport GamesList from './components/gameslist/gameslist.component';\nimport GameOverview from './components/game-overview/game-overview.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path='/' component={GamesList} /> \n        <Route path='/games/:gameId' component={GameOverview} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}